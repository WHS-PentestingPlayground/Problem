services:
  prob1-mysql:
    image: mysql
    container_name: prob1-mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: playground
    networks:
      - prob1-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p1234"]
      interval: 10s
      timeout: 5s
      retries: 5

  prob1-spring:
    build:
      context: ./FileUpload/playground
      dockerfile: Dockerfile
    container_name: prob1-spring-container
    depends_on:
      prob1-mysql:
        condition: service_healthy  
    networks:
      - prob1-net
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://prob1-mysql:3306/playground?serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      FLAG: VUL{my_little_s0da_flag}

  prob2-flask:
    build:
      context: ./FileDownload
      dockerfile: Dockerfile
    container_name: prob2-flask-container
    networks:
      - prob2-net
    ports:
      - "5000:5000"

  prob3-mysql:
    image: mysql:8.0
    container_name: prob3-mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: jwt_ctf
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - prob3-net

  prob3-flask:
    build:
      context: ./JwtAlgHs256
      dockerfile: Dockerfile
    container_name: prob3-flask-container
    depends_on:
      prob3-mysql:
        condition: service_healthy
    environment:
      - FLASK_ENV=development
    networks:
      - prob3-net
    ports:
      - "5001:5000"
    restart: unless-stopped

  prob4-mysql:
    build: ./mysqlRCE/mysql
    container_name: prob4-mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ROpasswd!!34
      MYSQL_DATABASE: vulunchDB
      MYSQL_USER: vulunch
      MYSQL_PASSWORD: vulunch
    volumes:
      - ./mysqlRCE/mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysqlRCE/flag:/flag:ro
      - ./mysqlRCE/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --secure-file-priv=""
    restart: unless-stopped
    networks:
      - prob4-net

  prob4-ssh:
    build: ./mysqlRCE/ssh
    container_name: prob4-ssh-container
    restart: unless-stopped
    networks:
      - prob4-net
    ports:
      - "22222:22"

networks:
  prob1-net:
    driver: bridge
  prob2-net:
    driver: bridge
  prob3-net:
    driver: bridge
  prob4-net:
    driver: bridge